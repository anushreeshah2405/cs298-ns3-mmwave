#ifndef CANDIDATEBASESTATIONS_H
#define CANDIDATEBASESTATIONS_H

#include <vector>
#include <unordered_map>
#include <map>
#include <utility>
#include <string>


class CandidateBaseStations {
public:

static inline int timeDifference = 1;

// base stations
// (bsid, #)
static inline std::unordered_map<int, int> idToIndexStationsMap = {
    {99343, 0},
    {198899, 1},
    {50158, 2},
    {238632, 3},
    {93728, 4},
    {198909, 5},
    {198911, 6},
    {237498, 7},
    {50036, 8},
    {93879, 9},
    {50000, 10},
    {93667, 11},
    {216506, 12},
    {77409, 13},
    {237497, 14},
    {200599, 15},
    {93898, 16},
    {93855, 17},
    {113664, 18},
    {50144, 19},
    {216111, 20},
    {229874, 21},
    {234554, 22},
    {234560, 23},
    {234564, 24},
    {234586, 25},
    {234582, 26},
    {234578, 27},
    {234599, 28},
    {234630, 29},
    {234636, 30},
    {234650, 31},
    {234664, 32},
    {233081, 33},
    {234717, 34},
    {234719, 35},
    {233541, 36},
    {234562, 37},
    {236642, 38},
    {236666, 39},
    {236772, 40},
    {236865, 41},
    {236968, 42},
    {237494, 43},
    {238890, 44},
    {238904, 45},
    {239230, 46},
    {237438, 47},
    {241004, 48},
    {242622, 49}
};

static inline std::unordered_map<int, int> indexToIdStationsMap = {
    {0, 99343},
    {1, 198899},
    {2, 50158},
    {3, 238632},
    {4, 93728},
    {5, 198909},
    {6, 198911},
    {7, 237498},
    {8, 50036},
    {9, 93879},
    {10, 50000},
    {11, 93667},
    {12, 216506},
    {13, 77409},
    {14, 237497},
    {15, 200599},
    {16, 93898},
    {17, 93855},
    {18, 113664},
    {19, 50144},
    {20, 216111},
    {21, 229874},
    {22, 234554},
    {23, 234560},
    {24, 234564},
    {25, 234586},
    {26, 234582},
    {27, 234578},
    {28, 234599},
    {29, 234630},
    {30, 234636},
    {31, 234650},
    {32, 234664},
    {33, 233081},
    {34, 234717},
    {35, 234719},
    {36, 233541},
    {37, 234562},
    {38, 236642},
    {39, 236666},
    {40, 236772},
    {41, 236865},
    {42, 236968},
    {43, 237494},
    {44, 238890},
    {45, 238904},
    {46, 239230},
    {47, 237438},
    {48, 241004},
    {49, 242622},
};

// base stations
// (#, (x, y))
static inline std::map<int, std::pair<double, double>> stationsMap = {
    {0,{-975550.9524,-857526.4064}},
    {1,{37387.81048,54707.86855}},
    {2,{30436.90157,60078.66831}},
    {3,{41937.90013,66306.08252}},
    {4,{9385.458364,67503.54571}},
    {5,{38991.48323,68614.63374}},
    {6,{39584.03981,70153.04142}},
    {7,{16184.54211,70914.83395}},
    {8,{56753.53353,73110.12734}},
    {9,{29432.59576,76125.05512}},
    {10,{65850.32276,88151.37888}},
    {11,{13463.93239,56151.40869}},
    {12,{43746.56683,55701.09879}},
    {13,{28221.39694,16525.14348}},
    {14,{18963.32108,18434.91564}},
    {15,{31292.08966,20759.70761}},
    {16,{25095.75524,37374.79331}},
    {17,{27365.67292,39322.40823}},
    {18,{12512.72906,42937.93202}},
    {19,{28128.52959,43532.31444}},
    {20,{36847.9351,44325.10556}},
    {21,{24202.47954,65736.48363}},
    {22,{16104.34695,73248.14586}},
    {23,{63874.35287,32413.77091}},
    {24,{58260.24061,43901.47297}},
    {25,{33329.6403,38482.62257}},
    {26,{19411.17612,12129.4964}},
    {27,{32629.82468,62266.78183}},
    {28,{14497.73719,48198.29109}},
    {29,{14082.65003,65870.83349}},
    {30,{42807.52484,77241.46504}},
    {31,{26042.58771,32858.9667}},
    {32,{26825.4596,11745.6898}},
    {33,{19964.61013,52596.50282}},
    {34,{37231.82399,73281.39451}},
    {35,{33233.91795,56275.13975}},
    {36,{43084.68396,95955.54052}},
    {37,{24156.05749,44780.98337}},
    {38,{61317.77008,76732.96904}},
    {39,{68749.37623,82027.44027}},
    {40,{35188.9339,95885.93504}},
    {41,{97277.99196,99760.18267}},
    {42,{72848.27795,23430.90898}},
    {43,{39619.30123,72069.40311}},
    {44,{16673.43763,51462.58616}},
    {45,{18053.39447,10605.97945}},
    {46,{8549.508886,14760.6443}},
    {47,{17986.67925,95585.40964}},
    {48,{16281.04543,38472.01054}},
    {49,{30572.25526,16826.56835}}
};

// vehicle positions
// (t, (x, y))
static inline std::map<int, std::pair<double, double>> vehiclePositions = {
        {0 * timeDifference, {12238.95146, 74749.21987}},
    {1 * timeDifference, {12318.01964, 74686.19451}},
    {2 * timeDifference, {12484.1774, 74553.84126}},
    {3 * timeDifference, {12728.25742, 74359.03561}},
    {4 * timeDifference, {13073.17801, 74084.58883}},
    {5 * timeDifference, {13512.06368, 73734.51161}},
    {6 * timeDifference, {14038.6119, 73315.10651}},
    {7 * timeDifference, {14667.71956, 72813.76844}},
    {8 * timeDifference, {15355.26891, 72266.02078}},
    {9 * timeDifference, {16108.70841, 71668.99876}},
    {10 * timeDifference, {16822.04087, 71109.79195}},
    {11 * timeDifference, {17343.43246, 70701.846}},
    {12 * timeDifference, {17711.27136, 70413.64823}},
    {13 * timeDifference, {17880.86687, 70280.72202}},
    {14 * timeDifference, {17898.62856, 70267.544}},
    {15 * timeDifference, {17899.77448, 70266.39808}},
    {16 * timeDifference, {17899.77448, 70266.39808}},
    {17 * timeDifference, {17899.77448, 70266.39808}},
    {18 * timeDifference, {17899.77448, 70266.39808}},
    {19 * timeDifference, {17899.77448, 70266.39808}},
    {20 * timeDifference, {17899.77448, 70266.39808}},
    {21 * timeDifference, {17899.77448, 70266.39808}},
    {22 * timeDifference, {17899.77448, 70266.39808}},
    {23 * timeDifference, {17899.77448, 70266.39808}},
    {24 * timeDifference, {17899.77448, 70266.39808}},
    {25 * timeDifference, {17899.77448, 70266.39808}},
    {26 * timeDifference, {17899.77448, 70266.39808}},
    {27 * timeDifference, {17899.77448, 70266.39808}},
    {28 * timeDifference, {17899.77448, 70266.39808}},
    {29 * timeDifference, {17899.77448, 70266.39808}},
    {30 * timeDifference, {17899.77448, 70266.39808}},
    {31 * timeDifference, {17899.77448, 70266.39808}},
    {32 * timeDifference, {17899.77448, 70266.39808}},
    {33 * timeDifference, {17899.77448, 70266.39808}},
    {34 * timeDifference, {17899.77448, 70266.39808}},
    {35 * timeDifference, {17973.68603, 70211.39413}},
    {36 * timeDifference, {18151.30295, 70089.92708}},
    {37 * timeDifference, {18422.88495, 69926.06115}},
    {38 * timeDifference, {18782.70244, 69747.29832}},
    {39 * timeDifference, {19235.91206, 69440.7659}},
    {40 * timeDifference, {19777.93013, 69007.03685}},
    {41 * timeDifference, {20394.43272, 68507.99061}},
    {42 * timeDifference, {21064.79334, 67956.23225}},
    {43 * timeDifference, {21807.34664, 67348.32403}},
    {44 * timeDifference, {22665.06446, 66646.45073}},
    {45 * timeDifference, {23611.59074, 65871.81179}},
    {46 * timeDifference, {24661.82238, 65012.3751}},
    {47 * timeDifference, {25712.05401, 64152.93841}},
    {48 * timeDifference, {26715.87607, 63331.88989}},
    {49 * timeDifference, {27395.40402, 62549.22954}},
    {50 * timeDifference, {28030.24125, 62048.46442}},
    {51 * timeDifference, {28504.65031, 61674.89594}},
    {52 * timeDifference, {28775.65935, 61461.18268}},
    {53 * timeDifference, {28844.98724, 61407.32465}},
    {54 * timeDifference, {28853.00865, 61401.02212}},
    {55 * timeDifference, {28853.58161, 61400.44916}},
    {56 * timeDifference, {28854.15456, 61399.8762}},
    {57 * timeDifference, {28854.15456, 61399.8762}},
    {58 * timeDifference, {28854.15456, 61399.8762}},
    {59 * timeDifference, {28854.15456, 61399.8762}},
    {60 * timeDifference, {28854.15456, 61399.8762}},
    {61 * timeDifference, {28854.15456, 61399.8762}},
    {62 * timeDifference, {28854.15456, 61399.8762}},
    {63 * timeDifference, {28854.15456, 61399.8762}},
    {64 * timeDifference, {28854.15456, 61399.8762}},
    {65 * timeDifference, {28854.15456, 61399.8762}},
    {66 * timeDifference, {28854.15456, 61399.8762}},
    {67 * timeDifference, {28854.15456, 61399.8762}},
    {68 * timeDifference, {28854.15456, 61399.8762}},
    {69 * timeDifference, {28854.15456, 61399.8762}},
    {70 * timeDifference, {28854.15456, 61399.8762}},
    {71 * timeDifference, {28854.15456, 61399.8762}},
    {72 * timeDifference, {28972.75683, 61315.6514}},
    {73 * timeDifference, {29197.35628, 61165.53646}},
    {74 * timeDifference, {29523.36927, 60947.8125}},
    {75 * timeDifference, {29971.42226, 60648.72853}},
    {76 * timeDifference, {30523.18062, 60272.86822}},
    {77 * timeDifference, {31114.47307, 59802.46987}},
    {78 * timeDifference, {31655.34522, 59138.98474}},
    {79 * timeDifference, {32411.07656, 58540.24384}},
    {80 * timeDifference, {33279.10762, 57852.69449}},
    {81 * timeDifference, {34245.68742, 57086.64992}},
    {82 * timeDifference, {35299.92976, 56251.85041}},
    {83 * timeDifference, {36357.03689, 55414.18611}},
    {84 * timeDifference, {37379.76655, 54604.02379}},
    {85 * timeDifference, {38397.91256, 53797.29922}},
    {86 * timeDifference, {39439.54983, 52972.23999}},
    {87 * timeDifference, {40506.9702, 52126.55429}},
    {88 * timeDifference, {41567.51508, 51286.59816}},
    {89 * timeDifference, {42612.5901, 50459.2471}},
    {90 * timeDifference, {43631.30906, 49651.94957}},
    {91 * timeDifference, {44674.6652, 48825.17147}},
    {92 * timeDifference, {45687.65458, 48023.03056}},
    {93 * timeDifference, {46716.68678, 47207.71161}},
    {94 * timeDifference, {47750.8756, 46388.38197}},
    {95 * timeDifference, {48805.69091, 45553.0095}},
    {96 * timeDifference, {49831.85832, 44739.98239}},
    {97 * timeDifference, {50843.70178, 43938.41444}},
    {98 * timeDifference, {51891.06863, 43108.77155}},
    {99 * timeDifference, {52920.10083, 42293.45261}},
    {100 * timeDifference, {53988.66712, 41447.19394}},
    {101 * timeDifference, {54966.70608, 40671.98205}},
    {102 * timeDifference, {55741.91797, 40056.62537}},
    {103 * timeDifference, {56595.05213, 39379.38926}},
    {104 * timeDifference, {57537.5677, 38631.67934}},
    {105 * timeDifference, {58339.13566, 38000.27985}},
    {106 * timeDifference, {59185.96728, 37336.22176}},
    {107 * timeDifference, {60017.32904, 36684.76875}},
    {108 * timeDifference, {60828.06432, 36048.7856}},
    {109 * timeDifference, {61631.35115, 35419.10498}},
    {110 * timeDifference, {62353.85093, 34852.44972}},
    {111 * timeDifference, {62893.57717, 34430.75278}},
    {112 * timeDifference, {63351.94341, 34170.05699}},
    {113 * timeDifference, {63850.98965, 34156.306}},
    {114 * timeDifference, {64249.76827, 34429.03391}},
    {115 * timeDifference, {64546.56041, 34796.87281}},
    {116 * timeDifference, {64932.16101, 35278.73032}},
    {117 * timeDifference, {65375.63034, 35833.35347}},
    {118 * timeDifference, {65897.02193, 36485.37944}},
    {119 * timeDifference, {66487.74142, 37223.34908}},
    {120 * timeDifference, {67143.7781, 38043.82464}},
    {121 * timeDifference, {67886.3314, 38972.01627}},
    {122 * timeDifference, {68662.11625, 39979.27607}},
    {123 * timeDifference, {69094.69939, 41094.25194}},
    {124 * timeDifference, {70001.69158, 42086.04188}},
    {125 * timeDifference, {70883.47363, 43079.5507}},
    {126 * timeDifference, {71752.6506, 44086.8105}},
    {127 * timeDifference, {72671.10195, 44969.73847}},
    {128 * timeDifference, {73497.88004, 46011.37574}},
    {129 * timeDifference, {74290.28067, 47040.40794}},
    {130 * timeDifference, {75094.71342, 48093.50437}},
    {131 * timeDifference, {75924.35631, 49120.24473}},
    {132 * timeDifference, {76768.8961, 50169.90342}},
    {133 * timeDifference, {77597.39307, 51208.6759}},
    {134 * timeDifference, {77974.3993, 52286.98247}},
    {135 * timeDifference, {78581.1616, 53061.04845}},
    {136 * timeDifference, {79028.64164, 53632.28737}},
    {137 * timeDifference, {79317.41237, 54000.69923}},
    {138 * timeDifference, {79446.90083, 54165.71108}},
    {139 * timeDifference, {79447.47379, 54166.28404}},
    {140 * timeDifference, {79447.47379, 54166.85699}},
    {141 * timeDifference, {79511.64506, 54246.49813}},
    {142 * timeDifference, {79661.18705, 54426.40688}},
    {143 * timeDifference, {79890.94312, 54702.57253}},
    {144 * timeDifference, {80209.50766, 55085.30834}},
    {145 * timeDifference, {80580.78431, 55531.64246}},
    {146 * timeDifference, {81036.85871, 56093.71406}},
    {147 * timeDifference, {81550.2289, 56735.99975}},
    {148 * timeDifference, {82124.33261, 57454.48882}},
    {149 * timeDifference, {82873.18845, 58189.02072}},
    {150 * timeDifference, {83760.12711, 58917.82303}},
    {151 * timeDifference, {84441.94689, 59774.96789}},
    {152 * timeDifference, {84979.3813, 60451.05809}},
    {153 * timeDifference, {85356.96049, 60925.46715}},
    {154 * timeDifference, {85607.916, 61193.03844}},
    {155 * timeDifference, {85952.83659, 61342.00746}},
    {156 * timeDifference, {86320.10254, 61181.00632}},
    {157 * timeDifference, {86740.08061, 60848.11784}},
    {158 * timeDifference, {87283.2446, 60534.13697}},
    {159 * timeDifference, {88008.60916, 60193.22708}},
    {160 * timeDifference, {88685.84528, 59655.79267}},
    {161 * timeDifference, {89423.81492, 59070.22981}},
    {162 * timeDifference, {90251.16597, 58413.62017}},
    {163 * timeDifference, {91148.99084, 57718.62237}},
    {164 * timeDifference, {92100.67374, 56974.35019}},
    {165 * timeDifference, {93144.02988, 56126.94561}},
    {166 * timeDifference, {94109.46377, 55341.99343}},
    {167 * timeDifference, {94876.0813, 54719.18831}},
    {168 * timeDifference, {95442.1636, 54258.53024}},
    {169 * timeDifference, {95838.65039, 53936.52796}},
    {170 * timeDifference, {96035.17492, 53777.24569}},
    {171 * timeDifference, {96050.07182, 53765.21358}},
    {172 * timeDifference, {96050.07182, 53764.64062}},
    {173 * timeDifference, {96050.07182, 53764.64062}},
    {174 * timeDifference, {96050.07182, 53764.64062}},
    {175 * timeDifference, {96050.07182, 53764.64062}},
    {176 * timeDifference, {96050.07182, 53764.64062}},
    {177 * timeDifference, {96050.07182, 53764.64062}},
    {178 * timeDifference, {96050.07182, 53764.64062}},
    {179 * timeDifference, {96050.07182, 53764.64062}},
    {180 * timeDifference, {96050.07182, 53764.64062}},
    {181 * timeDifference, {96050.07182, 53764.64062}},
    {182 * timeDifference, {96050.07182, 53764.64062}},
    {183 * timeDifference, {96050.07182, 53764.64062}},
    {184 * timeDifference, {96050.07182, 53764.64062}},
    {185 * timeDifference, {96050.07182, 53764.64062}},
    {186 * timeDifference, {96050.07182, 53764.64062}},
    {187 * timeDifference, {96050.07182, 53764.64062}},
    {188 * timeDifference, {96139.45323, 53693.59386}},
    {189 * timeDifference, {96335.97776, 53541.18708}},
    {190 * timeDifference, {96634.48877, 53309.13918}},
    {191 * timeDifference, {97015.5057, 53012.91999}},
    {192 * timeDifference, {97509.39532, 52628.46531}},
    {193 * timeDifference, {98098.96889, 52162.07767}},
    {194 * timeDifference, {98772.1943, 51629.22692}},
    {195 * timeDifference, {99512.45577, 50973.19024}},
    {196 * timeDifference, {100041.2958, 50463.83076}},
    {197 * timeDifference, {100390.8001, 50126.35862}},
    {198 * timeDifference, {100567.844, 49960.77382}},
    {199 * timeDifference, {100839.999, 49721.27746}},
    {200 * timeDifference, {101138.51, 49509.85604}},
    {201 * timeDifference, {101493.1709, 49449.12251}},
    {202 * timeDifference, {101793.9737, 49643.3552}},
    {203 * timeDifference, {102117.1219, 50032.9665}},
    {204 * timeDifference, {102517.0465, 50478.15471}},
    {205 * timeDifference, {103048.7513, 50938.23982}}
};

// dwell time + vehicle positions
// (t, ((x, y), list((bsid, t_dwell))))
// std::map(int, pair<>)

private:
    CandidateBaseStations() {}
};

#endif // CANDIDATEBASESTATIONS_H
