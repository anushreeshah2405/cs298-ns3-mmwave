#ifndef CANDIDATEBASESTATIONS_H
#define CANDIDATEBASESTATIONS_H

#include <vector>
#include <unordered_map>
#include <map>
#include <utility>
#include <string>


class CandidateBaseStations {
public:

static inline int timeDifference = 1;

// base stations
// (bsid, #)
static inline std::unordered_map<int, int> idToIndexStationsMap = {
    {198899,1},
    {50158,2},
    {238632,3},
    {198909,4},
    {198911,5},
    {237498,6},
    {50036,7},
    {93879,8},
    {50000,9},
    {936670,10},
    {2165061,11},
    {445162,12},
    {1701293,13},
    {445154,14},
    {2054695,15},
    {774096,16},
    {2374977,17},
    {2005998,18},
    {938989,19},
    {938550,20},
    {1136641,21},
    {501442,22},
    {2161113,23},
    {2298744,24},
    {2345545,25},
    {2345606,26},
    {2345647,27},
    {2345868,28},
    {2345829,29},
    {2345810,30},
    {2345781,31},
    {2345992,32},
    {2346303,33},
    {2346364,34},
    {2346505,35},
    {2346646,36},
    {2330817,37},
    {2347178,38},
    {2347199,39},
    {2335410,40},
    {2345621,41},
    {2366422,42},
    {2366663,43},
    {2367724,44},
    {2369685,45},
    {2374946,46},
    {2388907,47},
    {2389048,48},
    {2374389,49},
    {2410040,50},
    {2426221,51}
};

static inline std::unordered_map<int, int> indexToIdStationsMap = {
    {1,198899},
    {2,50158},
    {3,238632},
    {4,198909},
    {5,198911},
    {6,237498},
    {7,50036},
    {8,93879},
    {9,50000},
    {10,936670},
    {11,2165061},
    {12,445162},
    {13,1701293},
    {14,445154},
    {15,2054695},
    {16,774096},
    {17,2374977},
    {18,2005998},
    {19,938989},
    {20,938550},
    {21,1136641},
    {22,501442},
    {23,2161113},
    {24,2298744},
    {25,2345545},
    {26,2345606},
    {27,2345647},
    {28,2345868},
    {29,2345829},
    {30,2345810},
    {31,2345781},
    {32,2345992},
    {33,2346303},
    {34,2346364},
    {35,2346505},
    {36,2346646},
    {37,2330817},
    {38,2347178},
    {39,2347199},
    {40,2335410},
    {41,2345621},
    {42,2366422},
    {43,2366663},
    {44,2367724},
    {45,2369685},
    {46,2374946},
    {47,2388907},
    {48,2389048},
    {49,2374389},
    {50,2410040},
    {51,2426221}
};

// base stations
// (#, (x, y))
static inline std::map<int, std::pair<double, double>> stationsMap = {
    {1,{37387.81048,54707.86855}},
    {2,{30436.90157,60078.66831}},
    {3,{41937.90013,66306.08252}},
    {4,{38991.48323,68614.63374}},
    {5,{39584.03981,70153.04142}},
    {6,{16184.54211,70914.83395}},
    {8,{29432.59576,76125.05512}},
    {7,{56753.53353,73110.12734}},
    {9,{65850.32276,88151.37888}},
    {10,{13463.93239,56151.40869}},
    {11,{43746.56683,55701.09879}},
    {12,{12668.82214,3105.478977}},
    {13,{19124.67989,4054.643042}},
    {14,{13804.44963,4927.13375}},
    {15,{29472.34731,5278.358839}},
    {16,{28221.39694,16525.14348}},
    {17,{18963.32108,18434.91564}},
    {18,{31292.08966,20759.70761}},
    {19,{25095.75524,37374.79331}},
    {20,{27365.67292,39322.40823}},
    {21,{12512.72906,42937.93202}},
    {22,{28128.52959,43532.31444}},
    {23,{36847.9351,44325.10556}},
    {24,{24202.47954,65736.48363}},
    {25,{16104.34695,73248.14586}},
    {26,{63874.35287,32413.77091}},
    {27,{58260.24061,43901.47297}},
    {28,{33329.6403,38482.62257}},
    {29,{19411.17612,12129.4964}},
    {30,{20301.21564,2888.053448}},
    {31,{32629.82468,62266.78183}},
    {32,{14497.73719,48198.29109}},
    {33,{14082.65003,65870.83349}},
    {34,{42807.52484,77241.46504}},
    {35,{26042.58771,32858.9667}},
    {36,{26825.4596,11745.6898}},
    {37,{19964.61013,52596.50282}},
    {38,{37231.82399,73281.39451}},
    {39,{33233.91795,56275.13975}},
    {40,{43084.68396,95955.54052}},
    {41,{24156.05749,44780.98337}},
    {42,{61317.77008,76732.96904}},
    {43,{68749.37623,82027.44027}},
    {44,{35188.9339,95885.93504}},
    {45,{72848.27795,23430.90898}},
    {46,{39619.30123,72069.40311}},
    {47,{16673.43763,51462.58616}},
    {48,{18053.39447,10605.97945}},
    {49,{17986.67925,95585.40964}},
    {50,{16281.04543,38472.01054}},
    {51,{30572.25526,16826.56835}}
};

// vehicle positions
// (t, (x, y))
static inline std::map<int, std::pair<double, double>> vehiclePositions = {
    {0 * timeDifference, {63018.48197,35030.63959}},
    {1 * timeDifference, {62938.84084,35092.51904}},
    {2 * timeDifference, {62747.47293,35242.63398}},
    {3 * timeDifference, {62468.44249,35461.50386}},
    {4 * timeDifference, {62079.40415,35766.89036}},
    {5 * timeDifference, {61626.19453,36122.12419}},
    {6 * timeDifference, {61109.3866,36527.20536}},
    {7 * timeDifference, {60524.96965,36985.57159}},
    {8 * timeDifference, {59829.39888,37531.02741}},
    {9 * timeDifference, {59050.74924,38141.22746}},
    {10 * timeDifference, {58138.02747,38819.03654}},
    {11 * timeDifference, {57072.89893,39467.62476}},
    {12 * timeDifference, {55985.99799,40331.07216}},
    {13 * timeDifference, {54856.12522,41227.17815}},
    {14 * timeDifference, {53594.47216,42226.41654}},
    {15 * timeDifference, {52293.85796,43257.16762}},
    {16 * timeDifference, {51028.19419,44259.84376}},
    {17 * timeDifference, {49749.35239,45272.83314}},
    {18 * timeDifference, {48481.96975,46276.6552}},
    {19 * timeDifference, {47181.92851,47306.83331}},
    {20 * timeDifference, {45880.1684,48337.58439}},
    {21 * timeDifference, {44614.50463,49340.83349}},
    {22 * timeDifference, {43329.93326,50358.40653}},
    {23 * timeDifference, {42028.7461,51389.1576}},
    {24 * timeDifference, {40763.65529,52391.26079}},
    {25 * timeDifference, {39488.25124,53401.38538}},
    {26 * timeDifference, {38217.43085,54408.07223}},
    {27 * timeDifference, {36932.85947,55425.64527}},
    {28 * timeDifference, {35637.97486,56451.81268}},
    {29 * timeDifference, {34316.16122,57498.60657}},
    {30 * timeDifference, {33196.02873,58386.1182}},
    {31 * timeDifference, {32278.7233,59113.20164}},
    {32 * timeDifference, {31573.98522,59671.83549}},
    {33 * timeDifference, {31079.52264,60064.31158}},
    {34 * timeDifference, {30763.24994,60316.41301}},
    {35 * timeDifference, {30636.05331,60417.82654}},
    {36 * timeDifference, {30610.27021,60438.45302}},
    {37 * timeDifference, {30610.27021,60438.45302}},
    {38 * timeDifference, {30610.27021,60438.45302}},
    {39 * timeDifference, {30610.27021,60438.45302}},
    {40 * timeDifference, {30610.27021,60438.45302}},
    {41 * timeDifference, {30610.27021,60438.45302}},
    {42 * timeDifference, {30487.08428,60518.66711}},
    {43 * timeDifference, {30233.26398,60663.62543}},
    {44 * timeDifference, {29833.91239,60748.99614}},
    {45 * timeDifference, {29367.52475,60616.06994}},
    {46 * timeDifference, {28915.46105,60208.12399}},
    {47 * timeDifference, {28445.0627,59627.71774}},
    {48 * timeDifference, {27922.52519,58983.71318}},
    {49 * timeDifference, {27324.35725,58254.3379}},
    {50 * timeDifference, {26766.86932,57579.39362}},
    {51 * timeDifference, {26081.61179,57017.89498}},
    {52 * timeDifference, {25529.28048,56288.51971}}
};

// dwell time + vehicle positions
// (t, ((x, y), list((bsid, t_dwell))))
// std::map(int, pair<>)

private:
    CandidateBaseStations() {}
};

#endif // CANDIDATEBASESTATIONS_H
